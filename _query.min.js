const _=function(){function t(s){return this instanceof t?"string"==typeof s&&(s.includes(".")||s.includes("#")||s.includes("[")||s.includes("<"))?new e([...document.querySelectorAll(s)]):new r(s):new t(s)}class e{constructor(t){this.el=t,this.length=t.length,t.forEach(((t,e)=>this[e]=t))}each(t){return this.el.forEach(t),this}html(t){return void 0===t?this.el[0]?.innerHTML||"":this.each((e=>e.innerHTML=t))}txt(t){return void 0===t?this.el[0]?.textContent||"":this.each((e=>e.textContent=t))}attr(t,e){return void 0===e?this.el[0]?.getAttribute(t)||"":this.each((r=>r.setAttribute(t,e)))}ac(...t){return this.each((e=>e.classList.add(...t)))}rc(...t){return this.each((e=>e.classList.remove(...t)))}tc(t){return this.each((e=>e.classList.toggle(t)))}on(t,e){return this.each((r=>r.addEventListener(t,e)))}off(t,e){return this.each((r=>r.removeEventListener(t,e)))}css(t,e){return"object"==typeof t?this.each((e=>Object.assign(e.style,t))):void 0===e?getComputedStyle(this.el[0])[t]:this.each((r=>r.style[t]=e))}sel(t){const r=[];return this.each((e=>{r.push(...e.querySelectorAll(t))})),new e([...new Set(r)])}clos(t){return new e(Array.from(this.el).map((e=>e.closest(t))).filter(Boolean))}par(){return new e([...new Set(Array.from(this.el).map((t=>t.parentElement)).filter(Boolean))])}kids(){const t=[];return this.each((e=>t.push(...e.children))),new e([...new Set(t)])}}class r{constructor(t){this.wrap=t}each(t){return Array.isArray(this.wrap)?this.wrap.forEach(t):"object"==typeof this.wrap&&Object.entries(this.wrap).forEach((([e,r])=>t(r,e))),this}map(t){return new r(Array.isArray(this.wrap)?this.wrap.map(t):Object.entries(this.wrap).map((([e,r])=>t(r,e))))}find(t){return Array.isArray(this.wrap)?this.wrap.find(t):Object.entries(this.wrap).find((([e,r])=>t(r,e)))?.[1]}filt(t){return new r(Array.isArray(this.wrap)?this.wrap.filter(t):Object.fromEntries(Object.entries(this.wrap).filter((([e,r])=>t(r,e)))))}where(t){return this.filt((e=>Object.entries(t).every((([t,r])=>e[t]===r))))}findW(t){return this.find((e=>Object.entries(t).every((([t,r])=>e[t]===r))))}rej(t){return this.filt((e=>!t(e)))}evry(t){return Array.isArray(this.wrap)?this.wrap.every(t):Object.values(this.wrap).every(t)}some(t){return Array.isArray(this.wrap)?this.wrap.some(t):Object.values(this.wrap).some(t)}cont(t){return Array.isArray(this.wrap)?this.wrap.includes(t):Object.values(this.wrap).includes(t)}pluk(t){return new r(this.wrap.map((e=>e[t])))}frst(t){return void 0===t?this.wrap[0]:new r(this.wrap.slice(0,t))}last(t){return void 0===t?this.wrap[this.wrap.length-1]:new r(this.wrap.slice(-t))}init(t=1){return new r(this.wrap.slice(0,-t))}rest(t=1){return new r(this.wrap.slice(t))}comp(){return new r(this.wrap.filter(Boolean))}flat(t=1/0){const e=r=>r.reduce(((r,s)=>r.concat(Array.isArray(s)&&t>0?e(s,t-1):s)),[]);return new r(e(this.wrap))}val(){return this.wrap}}return t.range=(t,e,s=1)=>{void 0===e&&(e=t,t=0);const i=[];for(let r=t;r<e;r+=s)i.push(r);return new r(i)},t.memo=t=>{const e=new Map;return(...r)=>{const s=JSON.stringify(r);return e.has(s)||e.set(s,t(...r)),e.get(s)}},t.VERSION="1.0.0",t.NAME="_Query",window._=t,window._Q=t,t}();
